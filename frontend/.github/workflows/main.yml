name: Deploy to Alibaba Cloud ECS

on:
  push:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.19.0"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV_NAME=prod" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/usr/www/onlineNTYE/ntyeFrontend" >> $GITHUB_ENV
            echo "PM2_NAME=next-online-ntye" >> $GITHUB_ENV
            echo "ENV_FILE=.env.production" >> $GITHUB_ENV
          else
            echo "ENV_NAME=test" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/usr/www/ntye" >> $GITHUB_ENV
            echo "PM2_NAME=next-ntye" >> $GITHUB_ENV
            echo "ENV_FILE=.env.test" >> $GITHUB_ENV
          fi

      - name: Build project
        run: |
          npm run build:${{env.ENV_NAME}}

      - name: Archive static files
        run: tar -czf out.tar.gz .next .env.test .env.production public package.json next.config.js pnpm-lock.yaml

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ECS_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.ECS_SERVER }} >> ~/.ssh/known_hosts

      - name: Copy to ECS
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no out.tar.gz ${{ secrets.ECS_USER }}@${{ secrets.ECS_SERVER }}:/tmp/
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.ECS_USER }}@${{ secrets.ECS_SERVER }} "sudo rm -rf ${{env.DEPLOY_PATH}}/* && sudo tar -xzf /tmp/out.tar.gz -C ${{env.DEPLOY_PATH}}/ && sudo rm /tmp/out.tar.gz"

      - name: Run PM2 restart on ECS
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.ECS_USER }}@${{ secrets.ECS_SERVER }} "
            cd ${{env.DEPLOY_PATH}} &&
            pnpm install &&
            pm2 restart ${{env.PM2_NAME}} || pm2 start pnpm --name ${{env.PM2_NAME}} -- start:${{env.ENV_NAME}}
          "
